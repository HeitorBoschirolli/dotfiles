# remap prefix from 'C-b' to 'C-space'
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# vi-mode!
set-window-option -g mode-keys vi
list-keys -T copy-mode-vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# start window numbering at 1
set -g base-index 1
# start pane numbering at 1
set -g pane-base-index 1

# set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# pane border
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51
 
# splitting panes
bind v split-window -h -c '#{pane_current_path}'
bind h split-window -v -c '#{pane_current_path}'

# open new panes in current path
bind c new-window -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
# Restore clear screen
bind C-l send-keys 'C-l'

# unbind vim navigation keys to switch panunbind -n M-h
# unbind -n M-l
# unbind -n M-k
# unbind -n M-j

# setting escape time delay to be smaller ...
# ... to make tmux more responsive to commands
set -s escape-time 1

# enable mouse
set -g mouse on
